//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.3.0
//     from Assets/Scripts/Input/ControlSchemes.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @ControlSchemes : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @ControlSchemes()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""ControlSchemes"",
    ""maps"": [
        {
            ""name"": ""Gameplay"",
            ""id"": ""b4dbb086-b3b1-4f88-b6c9-084b279797b2"",
            ""actions"": [
                {
                    ""name"": ""Movement"",
                    ""type"": ""PassThrough"",
                    ""id"": ""e624753e-3bc4-4022-be49-e1444b18411f"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Shoot"",
                    ""type"": ""Button"",
                    ""id"": ""43566daf-9147-4291-8db8-1ecf30f5ed6e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press(behavior=2)"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ReloadWeapon"",
                    ""type"": ""Button"",
                    ""id"": ""cd096bab-5458-4f3b-9ef1-890f656c4b4e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""CameraZoom"",
                    ""type"": ""PassThrough"",
                    ""id"": ""7af84db9-c7e6-4a32-b1b3-290c448c552b"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""HealPlayer"",
                    ""type"": ""Button"",
                    ""id"": ""306a8f1c-cf78-49e6-94fe-05a28f5d964b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""OpenGameMenu"",
                    ""type"": ""Button"",
                    ""id"": ""26331139-aaf1-42d3-9234-32fe7540aa96"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""PrimaryWeapon"",
                    ""type"": ""Button"",
                    ""id"": ""4f75fc06-fda7-4f9b-8984-cd39920ded91"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SecondaryWeapon"",
                    ""type"": ""Button"",
                    ""id"": ""bfcb0505-3547-4e31-9b43-ef38ec46fc9c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""KnifeWeapon"",
                    ""type"": ""Button"",
                    ""id"": ""76e85076-846e-4fd9-b5f3-0f044aa3890a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""InventoryOpen"",
                    ""type"": ""Button"",
                    ""id"": ""43c09b57-a132-491e-8cdf-cd2ff202bafe"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Interaction"",
                    ""type"": ""Button"",
                    ""id"": ""2e4f0cfd-9ead-482f-9a49-fcded08f9b8a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""WASD"",
                    ""id"": ""77eb54f2-6ec9-4bf0-8be7-065c0e7fbe75"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Up"",
                    ""id"": ""53b839c8-1924-4ea8-93bd-90d9c11ceb03"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Down"",
                    ""id"": ""5ca5f1f4-822b-4a35-9959-f8a9fadcc4a0"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Left"",
                    ""id"": ""4b16eebb-1773-4fb1-9f8c-a1d14e08643d"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Right"",
                    ""id"": ""07ef83eb-a0c7-4889-a95b-260c80cdd0d0"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Arrows"",
                    ""id"": ""2fe53784-fde2-4807-8b5a-c3720ed8b686"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""3e313ee7-9c6b-46a4-9669-245eeb31433c"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""9ec4b77d-1229-4518-95c8-bc6685da3858"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""c205aed1-f45e-4546-98a1-112d633fe63f"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""6efd383c-d03c-45ee-b2b2-e02e9013ee50"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""dea9d56b-c258-46b8-9c48-8f849abbd471"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Shoot"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""fedb9e8b-d7b1-49ac-b907-cd9aca62d487"",
                    ""path"": ""<Keyboard>/r"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ReloadWeapon"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""32dc0837-70b4-4d22-9cfc-155d3dfb637d"",
                    ""path"": ""<Mouse>/scroll/y"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CameraZoom"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2dffb268-2d7c-4512-908d-bcba09b127eb"",
                    ""path"": ""<Keyboard>/h"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""HealPlayer"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""991f5424-4899-4529-93cb-d01d1cde1eaa"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""OpenGameMenu"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7e15fc40-7a1d-47ba-9e2b-3edbc77acadc"",
                    ""path"": ""<Keyboard>/1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PrimaryWeapon"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""568e99ea-671b-4f2c-9089-82958d2a794d"",
                    ""path"": ""<Keyboard>/2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SecondaryWeapon"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ee2c0116-cf92-49d9-8ddc-8bdd5e798a8c"",
                    ""path"": ""<Keyboard>/3"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""KnifeWeapon"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""83a47600-1093-4210-bba3-e60ebd80662a"",
                    ""path"": ""<Keyboard>/i"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""InventoryOpen"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2fe8fec0-7c8e-4bdf-af29-0a3dbcfec415"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Interaction"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""MenuAndInventory"",
            ""id"": ""b8b0995b-bae1-4c43-b485-2ab7561ca2e0"",
            ""actions"": [
                {
                    ""name"": ""InventoryClose"",
                    ""type"": ""Button"",
                    ""id"": ""31986dbe-da48-48d4-8bd1-9dfe05553b69"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""CloseGameMenu"",
                    ""type"": ""Button"",
                    ""id"": ""9c6e64a5-77de-42eb-991b-3bd039e99c64"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""35bcd146-aff7-44ef-98cf-2597b9970ffd"",
                    ""path"": ""<Keyboard>/i"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""InventoryClose"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3ea840f4-cbdf-43fd-9dea-0e095062a331"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CloseGameMenu"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Gameplay
        m_Gameplay = asset.FindActionMap("Gameplay", throwIfNotFound: true);
        m_Gameplay_Movement = m_Gameplay.FindAction("Movement", throwIfNotFound: true);
        m_Gameplay_Shoot = m_Gameplay.FindAction("Shoot", throwIfNotFound: true);
        m_Gameplay_ReloadWeapon = m_Gameplay.FindAction("ReloadWeapon", throwIfNotFound: true);
        m_Gameplay_CameraZoom = m_Gameplay.FindAction("CameraZoom", throwIfNotFound: true);
        m_Gameplay_HealPlayer = m_Gameplay.FindAction("HealPlayer", throwIfNotFound: true);
        m_Gameplay_OpenGameMenu = m_Gameplay.FindAction("OpenGameMenu", throwIfNotFound: true);
        m_Gameplay_PrimaryWeapon = m_Gameplay.FindAction("PrimaryWeapon", throwIfNotFound: true);
        m_Gameplay_SecondaryWeapon = m_Gameplay.FindAction("SecondaryWeapon", throwIfNotFound: true);
        m_Gameplay_KnifeWeapon = m_Gameplay.FindAction("KnifeWeapon", throwIfNotFound: true);
        m_Gameplay_InventoryOpen = m_Gameplay.FindAction("InventoryOpen", throwIfNotFound: true);
        m_Gameplay_Interaction = m_Gameplay.FindAction("Interaction", throwIfNotFound: true);
        // MenuAndInventory
        m_MenuAndInventory = asset.FindActionMap("MenuAndInventory", throwIfNotFound: true);
        m_MenuAndInventory_InventoryClose = m_MenuAndInventory.FindAction("InventoryClose", throwIfNotFound: true);
        m_MenuAndInventory_CloseGameMenu = m_MenuAndInventory.FindAction("CloseGameMenu", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Gameplay
    private readonly InputActionMap m_Gameplay;
    private IGameplayActions m_GameplayActionsCallbackInterface;
    private readonly InputAction m_Gameplay_Movement;
    private readonly InputAction m_Gameplay_Shoot;
    private readonly InputAction m_Gameplay_ReloadWeapon;
    private readonly InputAction m_Gameplay_CameraZoom;
    private readonly InputAction m_Gameplay_HealPlayer;
    private readonly InputAction m_Gameplay_OpenGameMenu;
    private readonly InputAction m_Gameplay_PrimaryWeapon;
    private readonly InputAction m_Gameplay_SecondaryWeapon;
    private readonly InputAction m_Gameplay_KnifeWeapon;
    private readonly InputAction m_Gameplay_InventoryOpen;
    private readonly InputAction m_Gameplay_Interaction;
    public struct GameplayActions
    {
        private @ControlSchemes m_Wrapper;
        public GameplayActions(@ControlSchemes wrapper) { m_Wrapper = wrapper; }
        public InputAction @Movement => m_Wrapper.m_Gameplay_Movement;
        public InputAction @Shoot => m_Wrapper.m_Gameplay_Shoot;
        public InputAction @ReloadWeapon => m_Wrapper.m_Gameplay_ReloadWeapon;
        public InputAction @CameraZoom => m_Wrapper.m_Gameplay_CameraZoom;
        public InputAction @HealPlayer => m_Wrapper.m_Gameplay_HealPlayer;
        public InputAction @OpenGameMenu => m_Wrapper.m_Gameplay_OpenGameMenu;
        public InputAction @PrimaryWeapon => m_Wrapper.m_Gameplay_PrimaryWeapon;
        public InputAction @SecondaryWeapon => m_Wrapper.m_Gameplay_SecondaryWeapon;
        public InputAction @KnifeWeapon => m_Wrapper.m_Gameplay_KnifeWeapon;
        public InputAction @InventoryOpen => m_Wrapper.m_Gameplay_InventoryOpen;
        public InputAction @Interaction => m_Wrapper.m_Gameplay_Interaction;
        public InputActionMap Get() { return m_Wrapper.m_Gameplay; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(GameplayActions set) { return set.Get(); }
        public void SetCallbacks(IGameplayActions instance)
        {
            if (m_Wrapper.m_GameplayActionsCallbackInterface != null)
            {
                @Movement.started -= m_Wrapper.m_GameplayActionsCallbackInterface.OnMovement;
                @Movement.performed -= m_Wrapper.m_GameplayActionsCallbackInterface.OnMovement;
                @Movement.canceled -= m_Wrapper.m_GameplayActionsCallbackInterface.OnMovement;
                @Shoot.started -= m_Wrapper.m_GameplayActionsCallbackInterface.OnShoot;
                @Shoot.performed -= m_Wrapper.m_GameplayActionsCallbackInterface.OnShoot;
                @Shoot.canceled -= m_Wrapper.m_GameplayActionsCallbackInterface.OnShoot;
                @ReloadWeapon.started -= m_Wrapper.m_GameplayActionsCallbackInterface.OnReloadWeapon;
                @ReloadWeapon.performed -= m_Wrapper.m_GameplayActionsCallbackInterface.OnReloadWeapon;
                @ReloadWeapon.canceled -= m_Wrapper.m_GameplayActionsCallbackInterface.OnReloadWeapon;
                @CameraZoom.started -= m_Wrapper.m_GameplayActionsCallbackInterface.OnCameraZoom;
                @CameraZoom.performed -= m_Wrapper.m_GameplayActionsCallbackInterface.OnCameraZoom;
                @CameraZoom.canceled -= m_Wrapper.m_GameplayActionsCallbackInterface.OnCameraZoom;
                @HealPlayer.started -= m_Wrapper.m_GameplayActionsCallbackInterface.OnHealPlayer;
                @HealPlayer.performed -= m_Wrapper.m_GameplayActionsCallbackInterface.OnHealPlayer;
                @HealPlayer.canceled -= m_Wrapper.m_GameplayActionsCallbackInterface.OnHealPlayer;
                @OpenGameMenu.started -= m_Wrapper.m_GameplayActionsCallbackInterface.OnOpenGameMenu;
                @OpenGameMenu.performed -= m_Wrapper.m_GameplayActionsCallbackInterface.OnOpenGameMenu;
                @OpenGameMenu.canceled -= m_Wrapper.m_GameplayActionsCallbackInterface.OnOpenGameMenu;
                @PrimaryWeapon.started -= m_Wrapper.m_GameplayActionsCallbackInterface.OnPrimaryWeapon;
                @PrimaryWeapon.performed -= m_Wrapper.m_GameplayActionsCallbackInterface.OnPrimaryWeapon;
                @PrimaryWeapon.canceled -= m_Wrapper.m_GameplayActionsCallbackInterface.OnPrimaryWeapon;
                @SecondaryWeapon.started -= m_Wrapper.m_GameplayActionsCallbackInterface.OnSecondaryWeapon;
                @SecondaryWeapon.performed -= m_Wrapper.m_GameplayActionsCallbackInterface.OnSecondaryWeapon;
                @SecondaryWeapon.canceled -= m_Wrapper.m_GameplayActionsCallbackInterface.OnSecondaryWeapon;
                @KnifeWeapon.started -= m_Wrapper.m_GameplayActionsCallbackInterface.OnKnifeWeapon;
                @KnifeWeapon.performed -= m_Wrapper.m_GameplayActionsCallbackInterface.OnKnifeWeapon;
                @KnifeWeapon.canceled -= m_Wrapper.m_GameplayActionsCallbackInterface.OnKnifeWeapon;
                @InventoryOpen.started -= m_Wrapper.m_GameplayActionsCallbackInterface.OnInventoryOpen;
                @InventoryOpen.performed -= m_Wrapper.m_GameplayActionsCallbackInterface.OnInventoryOpen;
                @InventoryOpen.canceled -= m_Wrapper.m_GameplayActionsCallbackInterface.OnInventoryOpen;
                @Interaction.started -= m_Wrapper.m_GameplayActionsCallbackInterface.OnInteraction;
                @Interaction.performed -= m_Wrapper.m_GameplayActionsCallbackInterface.OnInteraction;
                @Interaction.canceled -= m_Wrapper.m_GameplayActionsCallbackInterface.OnInteraction;
            }
            m_Wrapper.m_GameplayActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Movement.started += instance.OnMovement;
                @Movement.performed += instance.OnMovement;
                @Movement.canceled += instance.OnMovement;
                @Shoot.started += instance.OnShoot;
                @Shoot.performed += instance.OnShoot;
                @Shoot.canceled += instance.OnShoot;
                @ReloadWeapon.started += instance.OnReloadWeapon;
                @ReloadWeapon.performed += instance.OnReloadWeapon;
                @ReloadWeapon.canceled += instance.OnReloadWeapon;
                @CameraZoom.started += instance.OnCameraZoom;
                @CameraZoom.performed += instance.OnCameraZoom;
                @CameraZoom.canceled += instance.OnCameraZoom;
                @HealPlayer.started += instance.OnHealPlayer;
                @HealPlayer.performed += instance.OnHealPlayer;
                @HealPlayer.canceled += instance.OnHealPlayer;
                @OpenGameMenu.started += instance.OnOpenGameMenu;
                @OpenGameMenu.performed += instance.OnOpenGameMenu;
                @OpenGameMenu.canceled += instance.OnOpenGameMenu;
                @PrimaryWeapon.started += instance.OnPrimaryWeapon;
                @PrimaryWeapon.performed += instance.OnPrimaryWeapon;
                @PrimaryWeapon.canceled += instance.OnPrimaryWeapon;
                @SecondaryWeapon.started += instance.OnSecondaryWeapon;
                @SecondaryWeapon.performed += instance.OnSecondaryWeapon;
                @SecondaryWeapon.canceled += instance.OnSecondaryWeapon;
                @KnifeWeapon.started += instance.OnKnifeWeapon;
                @KnifeWeapon.performed += instance.OnKnifeWeapon;
                @KnifeWeapon.canceled += instance.OnKnifeWeapon;
                @InventoryOpen.started += instance.OnInventoryOpen;
                @InventoryOpen.performed += instance.OnInventoryOpen;
                @InventoryOpen.canceled += instance.OnInventoryOpen;
                @Interaction.started += instance.OnInteraction;
                @Interaction.performed += instance.OnInteraction;
                @Interaction.canceled += instance.OnInteraction;
            }
        }
    }
    public GameplayActions @Gameplay => new GameplayActions(this);

    // MenuAndInventory
    private readonly InputActionMap m_MenuAndInventory;
    private IMenuAndInventoryActions m_MenuAndInventoryActionsCallbackInterface;
    private readonly InputAction m_MenuAndInventory_InventoryClose;
    private readonly InputAction m_MenuAndInventory_CloseGameMenu;
    public struct MenuAndInventoryActions
    {
        private @ControlSchemes m_Wrapper;
        public MenuAndInventoryActions(@ControlSchemes wrapper) { m_Wrapper = wrapper; }
        public InputAction @InventoryClose => m_Wrapper.m_MenuAndInventory_InventoryClose;
        public InputAction @CloseGameMenu => m_Wrapper.m_MenuAndInventory_CloseGameMenu;
        public InputActionMap Get() { return m_Wrapper.m_MenuAndInventory; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(MenuAndInventoryActions set) { return set.Get(); }
        public void SetCallbacks(IMenuAndInventoryActions instance)
        {
            if (m_Wrapper.m_MenuAndInventoryActionsCallbackInterface != null)
            {
                @InventoryClose.started -= m_Wrapper.m_MenuAndInventoryActionsCallbackInterface.OnInventoryClose;
                @InventoryClose.performed -= m_Wrapper.m_MenuAndInventoryActionsCallbackInterface.OnInventoryClose;
                @InventoryClose.canceled -= m_Wrapper.m_MenuAndInventoryActionsCallbackInterface.OnInventoryClose;
                @CloseGameMenu.started -= m_Wrapper.m_MenuAndInventoryActionsCallbackInterface.OnCloseGameMenu;
                @CloseGameMenu.performed -= m_Wrapper.m_MenuAndInventoryActionsCallbackInterface.OnCloseGameMenu;
                @CloseGameMenu.canceled -= m_Wrapper.m_MenuAndInventoryActionsCallbackInterface.OnCloseGameMenu;
            }
            m_Wrapper.m_MenuAndInventoryActionsCallbackInterface = instance;
            if (instance != null)
            {
                @InventoryClose.started += instance.OnInventoryClose;
                @InventoryClose.performed += instance.OnInventoryClose;
                @InventoryClose.canceled += instance.OnInventoryClose;
                @CloseGameMenu.started += instance.OnCloseGameMenu;
                @CloseGameMenu.performed += instance.OnCloseGameMenu;
                @CloseGameMenu.canceled += instance.OnCloseGameMenu;
            }
        }
    }
    public MenuAndInventoryActions @MenuAndInventory => new MenuAndInventoryActions(this);
    public interface IGameplayActions
    {
        void OnMovement(InputAction.CallbackContext context);
        void OnShoot(InputAction.CallbackContext context);
        void OnReloadWeapon(InputAction.CallbackContext context);
        void OnCameraZoom(InputAction.CallbackContext context);
        void OnHealPlayer(InputAction.CallbackContext context);
        void OnOpenGameMenu(InputAction.CallbackContext context);
        void OnPrimaryWeapon(InputAction.CallbackContext context);
        void OnSecondaryWeapon(InputAction.CallbackContext context);
        void OnKnifeWeapon(InputAction.CallbackContext context);
        void OnInventoryOpen(InputAction.CallbackContext context);
        void OnInteraction(InputAction.CallbackContext context);
    }
    public interface IMenuAndInventoryActions
    {
        void OnInventoryClose(InputAction.CallbackContext context);
        void OnCloseGameMenu(InputAction.CallbackContext context);
    }
}
